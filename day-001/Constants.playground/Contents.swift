import UIKit

let name = "Halil ibrahim"
name
/* English let allows you to create a constant whose value doesnâ€™t need to be known at compile time, but you must assign it a value exactly once.
 If a let references an object, you can still modify its properties or call methods on it. However, you cannot assign a different object to that identifier.
 For collections and non-object types:
 If you reference a struct with let, you cannot change its properties or call any of its mutating methods.
 When using let with collections (like arrays or dictionaries), it works similarly to mutable/immutable Foundation collections:
 If you assign an array to a let, you canâ€™t change its contents.
 If you reference a dictionary with let, you canâ€™t add or remove key/value pairs or assign a new value for a key â€” itâ€™s truly immutable.
 To mutate an array or dictionary (e.g., assign to subscripts or append), you must declare it with var 12.
 In summary, let is like a const pointer in C. It allows you to work with objects and collections in a way that ensures immutability or controlled mutability. ğŸš€
 
 Turkish:
 Swift dilinde let anahtar kelimesi, sabit deÄŸerler iÃ§in kullanÄ±lÄ±r. Ä°ÅŸte bazÄ± Ã¶nemli noktalar:

 let, bir deÄŸiÅŸkenin deÄŸerini derleme zamanÄ±nda bilinmesi gerekmez, ancak bir kez deÄŸer atamalÄ±sÄ±nÄ±z.
 Bir let nesnesine referans veriyorsanÄ±z, nesnenin Ã¶zelliklerini hala deÄŸiÅŸtirebilir veya yÃ¶ntemlerini Ã§aÄŸÄ±rabilirsiniz. Ancak bu tanÄ±mlayÄ±cÄ±ya farklÄ± bir nesne atayamazsÄ±nÄ±z.
 Koleksiyonlar ve nesne olmayan tÃ¼rler iÃ§in de Ã¶nemlidir:
 Bir structâ€™a let ile referans verirseniz, Ã¶zelliklerini deÄŸiÅŸtiremez veya deÄŸiÅŸen iÅŸlev yÃ¶ntemlerini Ã§aÄŸÄ±ramazsÄ±nÄ±z.
 Koleksiyonlarla let / var kullanÄ±mÄ±, temelde deÄŸiÅŸken/deÄŸiÅŸmez Foundation koleksiyonlarÄ± gibi Ã§alÄ±ÅŸÄ±r:
 Bir diziyi let ile atarsanÄ±z, iÃ§eriÄŸini deÄŸiÅŸtiremezsiniz.
 Bir sÃ¶zlÃ¼ÄŸe let ile referans verirseniz, anahtar/deÄŸer Ã§iftleri ekleyemez veya kaldÄ±ramaz veya bir anahtar iÃ§in yeni bir deÄŸer atayamazsÄ±nÄ±z â€” gerÃ§ekten deÄŸiÅŸmezdir.
 Bir diziyi veya sÃ¶zlÃ¼ÄŸÃ¼ alt dizilere atamak, eklemek veya baÅŸka ÅŸekilde deÄŸiÅŸtirmek istiyorsanÄ±z, var ile tanÄ±mlamalÄ±sÄ±nÄ±z .
 */

